{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Actor } from \"./Actor\";\nimport Home from \"../Home\";\nimport { Directors } from \"../directors/Directors\";\nimport { Movies } from \"../movies/Movies\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nexport var Actors = function Actors() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      actors = _useState2[0],\n      setActors = _useState2[1];\n\n  var Stick = createNativeStackNavigator();\n  useEffect(function () {\n    fetchActors();\n  }, [fetchActors]);\n\n  var fetchActors = function fetchActors() {\n    var url, resp, allActors, listOfActors;\n    return _regeneratorRuntime.async(function fetchActors$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"http://192.168.1.95:8080/actors\";\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(resp.json());\n\n          case 6:\n            allActors = _context.sent;\n            listOfActors = allActors.map(function (actor) {\n              return {\n                actorID: actor.actorID,\n                name: actor.name,\n                lastName: actor.lastName\n              };\n            });\n            setActors(listOfActors);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(NavigationContainer, null, React.createElement(Stick.Navigator, null, React.createElement(Stick.Screen, {\n    name: \"Actor\",\n    component: Actor\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15,\n    paddingBottom: 25,\n    paddingHorizontal: 25,\n    opacity: 0.5\n  },\n  actorStyle: {\n    flexDirection: \"row\",\n    marginTop: 50\n  },\n  title: {\n    marginRight: 20,\n    fontSize: 25,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Gianca/Desktop/Programacion 2/fmovie-expo/components/actors/Actors.js"],"names":["React","useEffect","useState","Actor","Home","Directors","Movies","NavigationContainer","createNativeStackNavigator","Actors","actors","setActors","Stick","fetchActors","url","fetch","resp","json","allActors","listOfActors","map","actor","actorID","name","lastName","styles","StyleSheet","create","container","backgroundColor","alignItems","justifyContent","borderRadius","paddingBottom","paddingHorizontal","opacity","actorStyle","flexDirection","marginTop","title","marginRight","fontSize","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;AAEA,SAAQC,KAAR;AACA,OAAOC,IAAP;AACA,SAAQC,SAAR;AACA,SAAQC,MAAR;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB,kBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,GACJ,iCADI;AAAA;AAAA,6CAEGC,KAAK,CAACD,GAAD,CAFR;;AAAA;AAEVE,YAAAA,IAFU;AAAA;AAAA,6CAGQA,IAAI,CAACC,IAAL,EAHR;;AAAA;AAGVC,YAAAA,SAHU;AAIVC,YAAAA,YAJU,GAIKD,SAAS,CAACE,GAAV,CAAc,UAACC,KAAD,EAAW;AAC1C,qBAAO;AACHC,gBAAAA,OAAO,EAAED,KAAK,CAACC,OADZ;AAEHC,gBAAAA,IAAI,EAAEF,KAAK,CAACE,IAFT;AAGHC,gBAAAA,QAAQ,EAAEH,KAAK,CAACG;AAHb,eAAP;AAKH,aANoB,CAJL;AAWhBb,YAAAA,SAAS,CAACQ,YAAD,CAAT;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAcA,SAIQ,oBAAC,mBAAD,QACI,oBAAC,KAAD,CAAO,SAAP,QACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEhB;AAAtC,IADJ,CADJ,CAJR;AAaH,CApCM;AAsCP,IAAMsB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,eAAe,EAAE,MADV;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,YAAY,EAAE,EAJP;AAKPC,IAAAA,aAAa,EAAE,EALR;AAMPC,IAAAA,iBAAiB,EAAE,EANZ;AAOPC,IAAAA,OAAO,EAAE;AAPF,GADkB;AAW7BC,EAAAA,UAAU,EAAE;AAERC,IAAAA,aAAa,EAAE,KAFP;AAGRC,IAAAA,SAAS,EAAE;AAHH,GAXiB;AAkB7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,EADV;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,UAAU,EAAE;AAHT;AAlBsB,CAAlB,CAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {Actor} from \"./Actor\";\r\nimport Home from \"../Home\";\r\nimport {Directors} from \"../directors/Directors\";\r\nimport {Movies} from \"../movies/Movies\";\r\nimport {NavigationContainer} from \"@react-navigation/native\";\r\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\r\n\r\nexport const Actors = () => {\r\n    const [actors, setActors] = useState([]);\r\n\r\n    const Stick = createNativeStackNavigator();\r\n\r\n    useEffect(() => {\r\n        fetchActors();\r\n    }, [fetchActors]);\r\n\r\n    const fetchActors = async () => {\r\n        const url = \"http://192.168.1.95:8080/actors\";\r\n        const resp = await fetch(url);\r\n        const allActors = await resp.json();\r\n        const listOfActors = allActors.map((actor) => {\r\n            return {\r\n                actorID: actor.actorID,\r\n                name: actor.name,\r\n                lastName: actor.lastName,\r\n            };\r\n        });\r\n        setActors(listOfActors);\r\n    }\r\n\r\n    return (\r\n\r\n\r\n\r\n            <NavigationContainer>\r\n                <Stick.Navigator>\r\n                    <Stick.Screen name=\"Actor\" component={Actor}/>\r\n                </Stick.Navigator>\r\n            </NavigationContainer>\r\n\r\n\r\n\r\n)\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 15,\r\n        paddingBottom: 25,\r\n        paddingHorizontal: 25,\r\n        opacity: 0.5,\r\n    },\r\n\r\n    actorStyle: {\r\n\r\n        flexDirection: \"row\",\r\n        marginTop: 50,\r\n\r\n    },\r\n\r\n    title: {\r\n        marginRight: 20,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}