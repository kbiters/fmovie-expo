{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Director } from \"./Director\";\nexport var Directors = function Directors(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      directors = _useState2[0],\n      setDirectors = _useState2[1];\n\n  useEffect(function () {\n    fetchDirectors();\n  }, [fetchDirectors]);\n\n  var fetchDirectors = function fetchDirectors() {\n    var url, resp, allDirectors, listOfDirectors;\n    return _regeneratorRuntime.async(function fetchDirectors$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"http://192.168.1.95:8080/directors\";\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(resp.json());\n\n          case 6:\n            allDirectors = _context.sent;\n            listOfDirectors = allDirectors.map(function (director) {\n              return {\n                directorID: director.directorID,\n                name: director.name,\n                lastName: director.lastName\n              };\n            });\n            setDirectors(listOfDirectors);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.btnRegister\n  }, React.createElement(Button, {\n    title: \"Register Director\",\n    onPress: function onPress() {\n      return navigation.navigate('RegisterDirector');\n    }\n  })), React.createElement(View, {\n    style: styles.DirectorsStyle\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"#\"), React.createElement(Text, {\n    style: styles.title\n  }, \"NAME\"), React.createElement(Text, {\n    style: styles.title\n  }, \"LAST-NAME\")), React.createElement(View, null, directors.map(function (director) {\n    return React.createElement(Director, {\n      key: director.directorID,\n      id: director.directorID,\n      name: director.name,\n      lastName: director.lastName\n    });\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15,\n    paddingBottom: 25,\n    paddingHorizontal: 25,\n    opacity: 0.5\n  },\n  btnRegister: {\n    paddingBottom: 50\n  },\n  DirectorsStyle: {\n    flexDirection: \"row\"\n  },\n  title: {\n    marginRight: 20,\n    fontSize: 25,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Gianca/Desktop/Programacion 2/fmovie-expo/components/directors/Directors.js"],"names":["React","useEffect","useState","Director","Directors","navigation","directors","setDirectors","fetchDirectors","url","fetch","resp","json","allDirectors","listOfDirectors","map","director","directorID","name","lastName","styles","container","btnRegister","navigate","DirectorsStyle","title","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","paddingBottom","paddingHorizontal","opacity","flexDirection","marginRight","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Button, StyleSheet, Text, View} from \"react-native\";\r\nimport {Director} from \"./Director\";\r\n\r\nexport const Directors = ({ navigation }) => {\r\n    const [directors, setDirectors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchDirectors();\r\n    }, [fetchDirectors]);\r\n\r\n    const fetchDirectors = async () => {\r\n        const url = \"http://192.168.1.95:8080/directors\";\r\n        const resp = await fetch(url);\r\n        const allDirectors = await resp.json();\r\n\r\n        const listOfDirectors = allDirectors.map((director) => {\r\n            return {\r\n                directorID: director.directorID,\r\n                name: director.name,\r\n                lastName: director.lastName,\r\n            };\r\n\r\n        });\r\n        setDirectors(listOfDirectors);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.btnRegister}>\r\n                <Button\r\n                    title=\"Register Director\"\r\n                    onPress={() => navigation.navigate('RegisterDirector')}\r\n                />\r\n            </View>\r\n            <View style={styles.DirectorsStyle}>\r\n                <Text style={styles.title}>#</Text>\r\n                <Text style={styles.title}>NAME</Text>\r\n                <Text style={styles.title}>LAST-NAME</Text>\r\n            </View>\r\n            <View>\r\n                {directors.map((director) => (\r\n                    <Director key={director.directorID}\r\n                              id={director.directorID}\r\n                              name={director.name}\r\n                              lastName={director.lastName}\r\n                    />\r\n                ))}\r\n            </View>\r\n        </View>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 15,\r\n        paddingBottom: 25,\r\n        paddingHorizontal: 25,\r\n        opacity:0.5,\r\n\r\n    },\r\n\r\n    btnRegister:{\r\n        paddingBottom: 50,\r\n    },\r\n\r\n    DirectorsStyle: {\r\n        flexDirection: \"row\",\r\n    },\r\n\r\n    title: {\r\n        marginRight: 20,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}