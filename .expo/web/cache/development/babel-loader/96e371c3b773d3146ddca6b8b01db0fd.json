{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Movie } from \"./Movie\";\nexport var Movies = function Movies() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  useEffect(function () {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  var fetchMovies = function fetchMovies() {\n    var url, resp, allMovies, listOfMovies;\n    return _regeneratorRuntime.async(function fetchMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"http://192.168.1.95:8080/movies\";\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(resp.json());\n\n          case 6:\n            allMovies = _context.sent;\n            listOfMovies = allMovies.map(function (movie) {\n              return {\n                id: movie.id,\n                title: movie.title,\n                genre: movie.genre,\n                duration: movie.duration,\n                language: movie.language,\n                rate: movie.rate,\n                actors: movie.actors\n              };\n            });\n            setMovies(listOfMovies);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.moviesStyle\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"#\"), React.createElement(Text, {\n    style: styles.title\n  }, \"TITLE\"), React.createElement(Text, {\n    style: styles.title\n  }, \"GENRE\"), React.createElement(Text, {\n    style: styles.title\n  }, \"DURATION\"), React.createElement(Text, {\n    style: styles.title\n  }, \"LANGUAGE\"), React.createElement(Text, {\n    style: styles.title\n  }, \"RATE\")), React.createElement(View, null, movies.map(function (movie) {\n    return React.createElement(Movie, {\n      key: movie.id,\n      props: movie\n    });\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15,\n    paddingBottom: 25,\n    paddingHorizontal: 25,\n    opacity: 0.5\n  },\n  moviesStyle: {\n    flexDirection: \"row\",\n    marginTop: 50\n  },\n  title: {\n    marginRight: 20,\n    fontSize: 25,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Gianca/Desktop/Programacion 2/fmovie-expo/components/movies/Movies.js"],"names":["React","useEffect","useState","Movie","Movies","movies","setMovies","fetchMovies","url","fetch","resp","json","allMovies","listOfMovies","map","movie","id","title","genre","duration","language","rate","actors","styles","container","moviesStyle","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","paddingBottom","paddingHorizontal","opacity","flexDirection","marginTop","marginRight","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Button, StyleSheet, Text, View} from \"react-native\";\r\nimport {Movie} from \"./Movie\";\r\n\r\nexport const Movies = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [fetchMovies]);\r\n\r\n    const fetchMovies = async () => {\r\n        const url = \"http://192.168.1.95:8080/movies\";\r\n        const resp = await fetch(url);\r\n        const allMovies = await resp.json();\r\n        const listOfMovies = allMovies.map((movie) => {\r\n            return {\r\n                id: movie.id,\r\n                title: movie.title,\r\n                genre: movie.genre,\r\n                duration: movie.duration,\r\n                language: movie.language,\r\n                rate: movie.rate,\r\n                actors: movie.actors,\r\n            };\r\n        });\r\n\r\n        setMovies(listOfMovies);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.moviesStyle}>\r\n                <Text style={styles.title}>#</Text>\r\n                <Text style={styles.title}>TITLE</Text>\r\n                <Text style={styles.title}>GENRE</Text>\r\n                <Text style={styles.title}>DURATION</Text>\r\n                <Text style={styles.title}>LANGUAGE</Text>\r\n                <Text style={styles.title}>RATE</Text>\r\n            </View>\r\n            <View>\r\n                {movies.map((movie) => (\r\n                    <Movie key={movie.id} props={movie}/>\r\n                ))}\r\n\r\n            </View>\r\n        </View>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 15,\r\n        paddingBottom: 25,\r\n        paddingHorizontal: 25,\r\n        opacity:0.5,\r\n    },\r\n\r\n    moviesStyle: {\r\n\r\n        flexDirection: \"row\",\r\n        marginTop: 50,\r\n\r\n    },\r\n\r\n    title: {\r\n        marginRight: 20,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}